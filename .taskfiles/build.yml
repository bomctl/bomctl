# ------------------------------------------------------------------------
# SPDX-FileCopyrightText: Copyright Â© 2024 bomctl a Series of LF Projects, LLC
# SPDX-FileName: .taskfiles/build.yml
# SPDX-FileType: SOURCE
# SPDX-License-Identifier: Apache-2.0
# ------------------------------------------------------------------------
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------
---
# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

env:
  GO111MODULE: "on"
  GOPATH:
    sh: go env GOPATH
  GOPROXY: https://proxy.golang.org,direct
  LDFLAGS: -s -w
    -X=github.com/bomctl/bomctl/cmd.VersionMajor={{.VERSION_MAJOR}}
    -X=github.com/bomctl/bomctl/cmd.VersionMinor={{.VERSION_MINOR}}
    -X=github.com/bomctl/bomctl/cmd.VersionPatch={{.VERSION_PATCH}}
    -X=github.com/bomctl/bomctl/cmd.VersionPre={{.VERSION_PRE}}
    -X=github.com/bomctl/bomctl/cmd.BuildDate={{.BUILD_DATE}}

vars:
  BUILD_DATE: '{{dateInZone "2006-01-02T15:04:05Z" (now) "UTC"}}'
  GIT_SHA:
    sh: git rev-parse HEAD
  VERSION:
    sh: '{{default "Undefined" "git describe --tags --abbrev=0"}}'
  VERSION_REGEX: v(\d+)\.(\d+)\.(\d+)
  VERSION_MAJOR: '{{regexReplaceAll .VERSION_REGEX .VERSION "${1}"}}'
  VERSION_MINOR: '{{regexReplaceAll .VERSION_REGEX .VERSION "${2}"}}'
  VERSION_PATCH: '{{regexReplaceAll .VERSION_REGEX .VERSION "${3}"}}'

tasks:
  gobuild:
    internal: true
    generates:
      - "{{.OUTPUT}}"
    env:
      CGO_ENABLED: 0
      GOOS: "{{.GOOS}}"
      GOARCH: "{{.GOARCH}}"
    vars:
      OUTPUT: '{{joinPath "dist" (list .GOOS .GOARCH | join "-") "bomctl"}}{{.EXT}}'
    cmd: go build -trimpath -o {{.OUTPUT}} -ldflags="${LDFLAGS}"

  linux:amd:
    desc: Build for Linux on AMD64
    cmd:
      task: gobuild
      vars:
        GOOS: linux
        GOARCH: amd64

  linux:arm:
    desc: Build for Linux on ARM
    cmd:
      task: gobuild
      vars:
        GOOS: linux
        GOARCH: arm64

  macos:intel:
    desc: Build for macOS on AMD64
    cmd:
      task: gobuild
      vars:
        GOOS: darwin
        GOARCH: amd64

  macos:apple:
    desc: Build for macOS on ARM
    cmd:
      task: gobuild
      vars:
        GOOS: darwin
        GOARCH: arm64

  windows:amd:
    desc: Build for Windows on AMD64
    cmd:
      task: gobuild
      vars:
        EXT: .exe
        GOOS: windows
        GOARCH: amd64

  windows:arm:
    desc: Build for Windows on ARM
    cmd:
      task: gobuild
      vars:
        EXT: .exe
        GOOS: windows
        GOARCH: arm64
