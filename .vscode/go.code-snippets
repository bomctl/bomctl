{
  "Testify suite": {
    "prefix": ["stretchr", "testify", "suite"],
    "scope": "go",
    "isFileTemplate": true,
    "description": "Generate a stretchr/testify test suite with all interface methods as stubs",
    "body": [
      "${1:${LINE_COMMENT} Type `spdx` then press ctrl/command + space to generate file header}",
      "",
      "package ${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}_test",
      "",
      "import (",
      "\t\"testing\"",
      "",
      "\t\"github.com/stretchr/testify/suite\"",
      ")",
      "",
      "type ${2:${TM_FILENAME_BASE/_test//}Suite} struct {",
      "\tsuite.Suite",
      "}",
      "",
      "${LINE_COMMENT} SetupSuite runs before the tests in the suite are run.",
      "func (*${2}) SetupSuite() {}",
      "",
      "${LINE_COMMENT} SetupTest runs before each test in the suite.",
      "func (*${2}) SetupTest() {}",
      "",
      "${LINE_COMMENT} SetupSubtTest runs before each subtest in the suite.",
      "func (*${2}) SetupSubTest() {}",
      "",
      "${LINE_COMMENT} BeforeTest is executed right before the test starts.",
      "func (*${2}) BeforeTest(suiteName, testName string) {}",
      "",
      "${LINE_COMMENT} AfterTest is executed right after the test finishes.",
      "func (*${2}) AfterTest(suiteName, testName string) {}",
      "",
      "${LINE_COMMENT} TearDownSubTest runs after each subtest in the suite have been run.",
      "func (*${2}) TearDownSubTest() {}",
      "",
      "${LINE_COMMENT} TearDownTest runs after each test in the suite.",
      "func (*${2}) TearDownTest() {}",
      "",
      "${LINE_COMMENT} TearDownSuite runs after all the tests in the suite have been run.",
      "func (*${2}) TearDownSuite() {}",
      "",
      "${LINE_COMMENT} HandleStats will be executed when the test suite is finished. The stats",
      "${LINE_COMMENT} contain information about the execution of the suite and its tests.",
      "func (*${2}) HandleStats(suiteName string, stats *suite.SuiteInformation) {}",
      "",
      "${LINE_COMMENT} Add test methods here. The test method names should follow these conventions:",
      "${LINE_COMMENT} ",
      "${LINE_COMMENT} - For testing a function of a package:",
      "${LINE_COMMENT}     func (*${2}) Test{FunctionName}[_DescriptionOfTestCase]() {}",
      "${LINE_COMMENT} ",
      "${LINE_COMMENT} - For testing a method of a type:",
      "${LINE_COMMENT}     func (*${2}) Test{TypeName_MethodName}[_DescriptionOfTestCase]() {}",
      "${LINE_COMMENT} ",
      "${LINE_COMMENT} Where DescriptionOfTestCase is only required if testing multiple behaviors.",
      "${LINE_COMMENT} ",
      "${LINE_COMMENT} Delete this comment block and any unneeded methods above when finished.",
      "",
      "func Test${TM_FILENAME_BASE/(.*)_test/${1:/capitalize}/}Suite(t *testing.T) {",
      "\tt.Parallel()",
      "\tsuite.Run(t, new(${2}))",
      "}",
      ""
    ]
  }
}
