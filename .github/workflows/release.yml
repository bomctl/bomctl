# ------------------------------------------------------------------------
# SPDX-FileCopyrightText: Copyright Â© 2024 bomctl authors
# SPDX-FileName: .github/workflows/release.yml
# SPDX-FileType: SOURCE
# SPDX-License-Identifier: Apache-2.0
# ------------------------------------------------------------------------
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------
---
name: release

on:
  push:
    branches: main

  pull_request:
    branches: main
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read

jobs:
  next-release-version:
    runs-on: ubuntu-latest

    outputs:
      next-version: ${{ steps.next-version.outputs.next-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod
          cache: false

      - name: Install Semantic Version Util
        run: go install github.com/caarlos0/svu@a4642ead109ca37441f573f0118a4e79a7ac9a2f # v1.12.0

      - name: Get next release version
        id: next-version
        run: |
          next_version="$(.github/scripts/semver-util.sh next)"
          .github/scripts/semver-util.sh print

          echo "next-version=${next_version}" >> "$GITHUB_OUTPUT"

  push-tag:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: next-release-version

    permissions:
      contents: write # needed to push commit/tag

    steps:
      - name: Get GitHub App installation token
        uses: actions/create-github-app-token@7bfa3a4717ef143a604ee0a99d859b8886a96d00 # v1.9.3
        id: app-token
        with:
          app-id: ${{ vars.GORELEASER_BOT_APP_ID }}
          private-key: ${{ secrets.GORELEASER_BOT_RSA_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Check if tag exists
        id: tag-exists
        env:
          NEXT_VERSION: ${{ needs.next-release-version.outputs.next-version }}
        run: |
          [[ -n $(git tag --list "$NEXT_VERSION") ]] && tag_exists="true" || tag_exists="false"
          echo "tag-exists=${tag_exists}" >> "$GITHUB_OUTPUT"

      - name: Create tag for next release
        if: ${{ !fromJSON(steps.tag-exists.outputs.tag-exists) }}
        env:
          APP_TOKEN: ${{ steps.app-token.outputs.token }}
          NEXT_VERSION: ${{ needs.next-release-version.outputs.next-version }}
        run: |
          data=$(printf '{"ref": "refs/tags/%s", "sha": "%s"}' "${NEXT_VERSION}" "${GITHUB_SHA}")

          curl --request POST --output /dev/null \
            --fail --silent --show-error --location \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --header "Authorization: Bearer ${APP_TOKEN}" \
            --url https://api.github.com/repos/bomctl/bomctl/git/refs \
            --data "${data}"
