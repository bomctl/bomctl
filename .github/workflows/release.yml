# ------------------------------------------------------------------------
# SPDX-FileCopyrightText: Copyright Â© 2024 bomctl authors
# SPDX-FileName: .github/workflows/release.yml
# SPDX-FileType: SOURCE
# SPDX-License-Identifier: Apache-2.0
# ------------------------------------------------------------------------
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------
---
name: goreleaser

on:
  workflow_call:
    inputs:
      prerelease:
        default: ${{ contains(fromJSON('["dev", "alpha"]'), github.ref_name) }}
        required: true
        type: boolean

      should_publish:
        default: ${{ contains(fromJSON('["main", "next", "dev", "alpha"]'), github.ref_name) || endsWith(github.ref, '.x') }}
        required: true
        type: boolean

  push:
    branches:
      - "**"

permissions:
  contents: read

jobs:
  dry-run:
    runs-on: ubuntu-latest

    outputs:
      release-ver: ${{ steps.prerelease-tag.outputs.release-ver || steps.release-tag.outputs.release-ver }}

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: "1.21"
          cache: false

      - name: Install Semantic Version Util
        run: go install github.com/caarlos0/svu@a4642ead109ca37441f573f0118a4e79a7ac9a2f # v1.12.0

      - name: Get current tag
        id: current-tag
        run: echo "current-tag=$(svu current)" >> "$GITHUB_OUTPUT"

      - name: Get next prerelease version
        if: inputs.prerelease || contains(steps.current-tag.outputs.current-tag, '-')
        id: prerelease-tag
        run: |
          release_ver="$(svu prerelease --pre-release ${{ github.ref_name }})"
          echo "New release version: ${release_ver}"
          echo "release-ver=${release_ver}" >> "$GITHUB_OUTPUT"

      - name: Get next release version
        if: ( ! inputs.prerelease )
        id: release-tag
        run: |
          release_ver="$(svu next)"
          echo "New release version: ${release_ver}"
          echo "release-ver=${release_ver}" >> "$GITHUB_OUTPUT"

  release:
    if: inputs.should_publish
    runs-on: ubuntu-latest
    needs:
      - dry-run

    permissions:
      contents: write # needed to write releases

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: stable

      - name: Install Cosign
        uses: sigstore/cosign-installer@e1523de7571e31dbe865fd2e80c5c7c23ae71eb4 # v3.4.0

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@b6a39da80722a2cb0ef5d197531764a89b5d48c3 # v0.15.8

      - name: Create tag for new release
        run: |
          git tag ${{ needs.dry-run.outputs.release-ver }}
          git push --tags

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
